.TH "include/core/components.hpp" 3 "CYD-UI" \" -*- nroff -*-
.ad l
.nh
.SH NAME
include/core/components.hpp
.SH SYNOPSIS
.br
.PP
\fC#include '\&.\&./events/cydui_events\&.h'\fP
.br
\fC#include 'children_state_collection\&.hpp'\fP
.br
\fC#include '\&.\&./core/dimensions\&.hpp'\fP
.br
\fC#include '\&.\&./graphics/graphics\&.hpp'\fP
.br
\fC#include '\&.\&./core/drag_n_drop\&.h'\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBcydui::components::ComponentBorder\fP"
.br
.ti -1c
.RI "class \fBcydui::components::ComponentState\fP"
.br
.ti -1c
.RI "struct \fBcydui::components::component_builder_t\fP"
.br
.ti -1c
.RI "struct \fBcydui::components::c_init_t< c >\fP"
.br
.ti -1c
.RI "class \fBcydui::components::Component\fP"
.br
.ti -1c
.RI "struct \fBcydui::components::dynamic_builder_t\fP"
.br
.ti -1c
.RI "struct \fBcydui::components::dynamic_builder_t::comp_init_t\fP"
.br
.ti -1c
.RI "struct \fBcydui::components::dynamic_builder_impl_t< C >\fP"
.br
.in -1c
.SS "Namespaces"

.in +1c
.ti -1c
.RI "namespace \fBcydui\fP"
.br
.ti -1c
.RI "namespace \fBcydui::layout\fP"
.br
.ti -1c
.RI "namespace \fBcydui::components\fP"
.br
.in -1c
.SS "Concepts"

.in +1c
.ti -1c
.RI "concept \fBcydui::components::ComponentConcept\fP"
.br
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBSET_REFERENCE\fP   if (init\&.ref) *(init\&.ref) ="
.br
.ti -1c
.RI "#define \fBSET_WINDOW\fP(\fBSTATE\fP)   (\fBSTATE\fP)\->win = it\->win"
.br
.ti -1c
.RI "#define \fBINSTANTIATE_COMP\fP(\fBSTATE\fP)   new c(\fBSTATE\fP, init\&.props, get_init_function(\fBinit\fP))"
.br
.ti -1c
.RI "#define \fBNULLCOMP\fP   {\&.x = std::nullopt, \&.y = std::nullopt, \&.w = std::nullopt, \&.h = std::nullopt, \&.build = [](component_builder_t){ return Component::new_group(); } }"
.br
.ti -1c
.RI "#define \fBCOMP\fP(\fBCOMPONENT\fP)   create<\fBCOMPONENT\fP, __COUNTER__>"
.br
.ti -1c
.RI "#define \fBGROUP\fP   create_group"
.br
.ti -1c
.RI "#define \fBIF\fP(CONDITION)   [&,this]()\->component_builder_t { if (CONDITION) return"
.br
.ti -1c
.RI "#define \fBELSE\fP   else return"
.br
.ti -1c
.RI "#define \fBELSE_IF\fP(CONDITION)   else if(CONDITION) return"
.br
.ti -1c
.RI "#define \fBWHEN\fP(VARIABLE)   [&,this]()\->component_builder_t { auto value = VARIABLE;"
.br
.ti -1c
.RI "#define \fBCASE\fP(VALUE)   if (value == VALUE) return"
.br
.ti -1c
.RI "#define \fBEND\fP   return \fBNULLCOMP\fP; }()"
.br
.ti -1c
.RI "#define \fBFOR_EACH\fP(\fBCOMPONENT\fP)   create_for<\fBCOMPONENT\fP, __COUNTER__>"
.br
.ti -1c
.RI "#define \fBCOMP_EVENT_HANDLER\fP(EV,  ARGS)   virtual void on_##EV ARGS const"
.br
.ti -1c
.RI "#define \fBCOMP_EVENT_HANDLER_OVERRIDE\fP(EV,  ARGS)   virtual void on_##EV ARGS const override"
.br
.ti -1c
.RI "#define \fBREDRAW\fP   \fBCOMP_EVENT_HANDLER_OVERRIDE\fP(redraw, ())"
.br
.ti -1c
.RI "#define \fBRENDER\fP   virtual bool is_drawable() const override {return true;} \fBCOMP_EVENT_HANDLER_OVERRIDE\fP(render, (\fBvg::vg_fragment_t\fP& graphics))"
.br
.ti -1c
.RI "#define \fBON_KEY_RELEASE\fP(KEY)   \fBCOMP_EVENT_HANDLER_OVERRIDE\fP(key_release, (KeyData (KEY)))"
.br
.ti -1c
.RI "#define \fBON_KEY_PRESS\fP(KEY)   \fBCOMP_EVENT_HANDLER_OVERRIDE\fP(key_press, (KeyData (KEY)))"
.br
.ti -1c
.RI "#define \fBON_SCROLL\fP(DX,  DY)   \fBCOMP_EVENT_HANDLER_OVERRIDE\fP(scroll, (int (DX), int (DY)))"
.br
.ti -1c
.RI "#define \fBON_CLICK\fP(\fBX\fP,  \fBY\fP,  BUTTON)   \fBCOMP_EVENT_HANDLER_OVERRIDE\fP(mouse_click,  (int (\fBX\fP), int (\fBY\fP), int (BUTTON)))"
.br
.ti -1c
.RI "#define \fBON_MOUSE_MOTION\fP(\fBX\fP,  \fBY\fP)   \fBCOMP_EVENT_HANDLER_OVERRIDE\fP(mouse_motion, (int (\fBX\fP), int (\fBY\fP)))"
.br
.ti -1c
.RI "#define \fBON_MOUSE_EXIT\fP(\fBX\fP,  \fBY\fP)   \fBCOMP_EVENT_HANDLER_OVERRIDE\fP(mouse_exit,   (int (\fBX\fP), int (\fBY\fP)))"
.br
.ti -1c
.RI "#define \fBON_MOUSE_ENTER\fP(\fBX\fP,  \fBY\fP)   \fBCOMP_EVENT_HANDLER_OVERRIDE\fP(mouse_enter,  (int (\fBX\fP), int (\fBY\fP)))"
.br
.ti -1c
.RI "#define \fBON_DRAG_START\fP(\fBX\fP,  \fBY\fP)   \fBCOMP_EVENT_HANDLER_OVERRIDE\fP(drag_start, (int (\fBX\fP), int (\fBY\fP)))"
.br
.ti -1c
.RI "#define \fBON_DRAG_MOTION\fP(\fBX\fP,  \fBY\fP)   \fBCOMP_EVENT_HANDLER_OVERRIDE\fP(drag_motion, (int (\fBX\fP), int (\fBY\fP)))"
.br
.ti -1c
.RI "#define \fBON_DRAG_FINISH\fP(\fBX\fP,  \fBY\fP)   \fBCOMP_EVENT_HANDLER_OVERRIDE\fP(drag_finish, (int (\fBX\fP), int (\fBY\fP)))"
.br
.ti -1c
.RI "#define \fBSTATE\fP(NAME)   struct NAME##State: public \fBcydui::components::ComponentState\fP"
.br
.ti -1c
.RI "#define \fBINIT_STATE\fP(NAME)     explicit NAME##State(): \fBcydui::components::ComponentState\fP()"
.br
.ti -1c
.RI "#define \fBCOMPONENT\fP(NAME)"
.br
.ti -1c
.RI "#define \fBDISABLE_LOG\fP   this\->log\&.on = false;"
.br
.ti -1c
.RI "#define \fBENABLE_LOG\fP   this\->log\&.on = true;"
.br
.ti -1c
.RI "#define \fBPROPS\fP(\&.\&.\&.)"
.br
.ti -1c
.RI "#define \fBNO_PROPS\fP   \fBPROPS\fP({})"
.br
.ti -1c
.RI "#define \fBINIT\fP(NAME)"
.br
.ti -1c
.RI "#define \fBREFRESH\fP"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define CASE(VALUE)   if (value == VALUE) return"

.PP
Definition at line \fB230\fP of file \fBcomponents\&.hpp\fP\&.
.SS "#define COMP(\fBCOMPONENT\fP)   create<\fBCOMPONENT\fP, __COUNTER__>"

.PP
Definition at line \fB221\fP of file \fBcomponents\&.hpp\fP\&.
.SS "#define COMP_EVENT_HANDLER(EV, ARGS)   virtual void on_##EV ARGS const"

.PP
Definition at line \fB265\fP of file \fBcomponents\&.hpp\fP\&.
.SS "#define COMP_EVENT_HANDLER_OVERRIDE(EV, ARGS)   virtual void on_##EV ARGS const override"

.PP
Definition at line \fB266\fP of file \fBcomponents\&.hpp\fP\&.
.SS "#define COMPONENT(NAME)"
\fBValue:\fP.PP
.nf
  /*using namespace primitives;*/                                              \\
  struct NAME: public cydui::components::Component
.fi

.PP
Definition at line \fB393\fP of file \fBcomponents\&.hpp\fP\&..PP
.nf
395              : public cydui::components::Component
.fi

.SS "#define DISABLE_LOG   this\->log\&.on = false;"

.PP
Definition at line \fB397\fP of file \fBcomponents\&.hpp\fP\&.
.SS "#define ELSE   else return"

.PP
Definition at line \fB226\fP of file \fBcomponents\&.hpp\fP\&.
.SS "#define ELSE_IF(CONDITION)   else if(CONDITION) return"

.PP
Definition at line \fB227\fP of file \fBcomponents\&.hpp\fP\&.
.SS "#define ENABLE_LOG   this\->log\&.on = true;"

.PP
Definition at line \fB398\fP of file \fBcomponents\&.hpp\fP\&.
.SS "#define END   return \fBNULLCOMP\fP; }()"

.PP
Definition at line \fB231\fP of file \fBcomponents\&.hpp\fP\&.
.SS "#define FOR_EACH(\fBCOMPONENT\fP)   create_for<\fBCOMPONENT\fP, __COUNTER__>"

.PP
Definition at line \fB233\fP of file \fBcomponents\&.hpp\fP\&.
.SS "#define GROUP   create_group"

.PP
Definition at line \fB223\fP of file \fBcomponents\&.hpp\fP\&.
.SS "#define IF(CONDITION)   [&,this]()\->component_builder_t { if (CONDITION) return"

.PP
Definition at line \fB225\fP of file \fBcomponents\&.hpp\fP\&.
.SS "#define INIT(NAME)"
\fBValue:\fP.PP
.nf
  typedef NAME##State State;                                                   \\
  NAME##State* state  = nullptr;                                               \\
  static constexpr const char* Name = #NAME;                                                    \\
  logging::logger log = {\&.name = #NAME, \&.on = false};                          \\
  explicit NAME(NAME##State* state,                                            \\
      Props props,                                                             \\
      const std::function<void(cydui::components::Component*)>& inner)         \\
      : cydui::components::Component(state, inner), props(std::move(props)),   \\
        state(state)
.fi

.PP
Definition at line \fB406\fP of file \fBcomponents\&.hpp\fP\&..PP
.nf
410                       {\&.name = #NAME, \&.on = false};                          \\
411   explicit NAME(NAME##State* state,                                            \\
412       Props props,                                                             \\
413       const std::function<void(cydui::components::Component*)>& inner)         \\
414       : cydui::components::Component(state, inner), props(std::move(props)),   \\
415         state(state)
.fi

.SS "#define INIT_STATE(NAME)     explicit NAME##State(): \fBcydui::components::ComponentState\fP()"

.PP
Definition at line \fB390\fP of file \fBcomponents\&.hpp\fP\&..PP
.nf
391                         : cydui::components::ComponentState()
.fi

.SS "#define INSTANTIATE_COMP(\fBSTATE\fP)   new c(\fBSTATE\fP, init\&.props, get_init_function(\fBinit\fP))"

.PP
Definition at line \fB140\fP of file \fBcomponents\&.hpp\fP\&.
.SS "#define NO_PROPS   \fBPROPS\fP({})"

.PP
Definition at line \fB404\fP of file \fBcomponents\&.hpp\fP\&.
.SS "#define NULLCOMP   {\&.x = std::nullopt, \&.y = std::nullopt, \&.w = std::nullopt, \&.h = std::nullopt, \&.build = [](component_builder_t){ return Component::new_group(); } }"

.PP
Definition at line \fB219\fP of file \fBcomponents\&.hpp\fP\&.
.SS "#define ON_CLICK(\fBX\fP, \fBY\fP, BUTTON)   \fBCOMP_EVENT_HANDLER_OVERRIDE\fP(mouse_click,  (int (\fBX\fP), int (\fBY\fP), int (BUTTON)))"

.PP
Definition at line \fB299\fP of file \fBcomponents\&.hpp\fP\&.
.SS "#define ON_DRAG_FINISH(\fBX\fP, \fBY\fP)   \fBCOMP_EVENT_HANDLER_OVERRIDE\fP(drag_finish, (int (\fBX\fP), int (\fBY\fP)))"

.PP
Definition at line \fB305\fP of file \fBcomponents\&.hpp\fP\&.
.SS "#define ON_DRAG_MOTION(\fBX\fP, \fBY\fP)   \fBCOMP_EVENT_HANDLER_OVERRIDE\fP(drag_motion, (int (\fBX\fP), int (\fBY\fP)))"

.PP
Definition at line \fB304\fP of file \fBcomponents\&.hpp\fP\&.
.SS "#define ON_DRAG_START(\fBX\fP, \fBY\fP)   \fBCOMP_EVENT_HANDLER_OVERRIDE\fP(drag_start, (int (\fBX\fP), int (\fBY\fP)))"

.PP
Definition at line \fB303\fP of file \fBcomponents\&.hpp\fP\&.
.SS "#define ON_KEY_PRESS(KEY)   \fBCOMP_EVENT_HANDLER_OVERRIDE\fP(key_press, (KeyData (KEY)))"

.PP
Definition at line \fB297\fP of file \fBcomponents\&.hpp\fP\&.
.SS "#define ON_KEY_RELEASE(KEY)   \fBCOMP_EVENT_HANDLER_OVERRIDE\fP(key_release, (KeyData (KEY)))"

.PP
Definition at line \fB296\fP of file \fBcomponents\&.hpp\fP\&.
.SS "#define ON_MOUSE_ENTER(\fBX\fP, \fBY\fP)   \fBCOMP_EVENT_HANDLER_OVERRIDE\fP(mouse_enter,  (int (\fBX\fP), int (\fBY\fP)))"

.PP
Definition at line \fB302\fP of file \fBcomponents\&.hpp\fP\&.
.SS "#define ON_MOUSE_EXIT(\fBX\fP, \fBY\fP)   \fBCOMP_EVENT_HANDLER_OVERRIDE\fP(mouse_exit,   (int (\fBX\fP), int (\fBY\fP)))"

.PP
Definition at line \fB301\fP of file \fBcomponents\&.hpp\fP\&.
.SS "#define ON_MOUSE_MOTION(\fBX\fP, \fBY\fP)   \fBCOMP_EVENT_HANDLER_OVERRIDE\fP(mouse_motion, (int (\fBX\fP), int (\fBY\fP)))"

.PP
Definition at line \fB300\fP of file \fBcomponents\&.hpp\fP\&.
.SS "#define ON_SCROLL(DX, DY)   \fBCOMP_EVENT_HANDLER_OVERRIDE\fP(scroll, (int (DX), int (DY)))"

.PP
Definition at line \fB298\fP of file \fBcomponents\&.hpp\fP\&.
.SS "#define PROPS( \&.\&.\&.)"
\fBValue:\fP.PP
.nf
  struct Props __VA_ARGS__;                                                          \\
  Props props;
.fi

.PP
Definition at line \fB400\fP of file \fBcomponents\&.hpp\fP\&.
.SS "#define REDRAW   \fBCOMP_EVENT_HANDLER_OVERRIDE\fP(redraw, ())"

.PP
Definition at line \fB294\fP of file \fBcomponents\&.hpp\fP\&.
.SS "#define REFRESH"
\fBValue:\fP.PP
.nf
if (state\->win) { \\
  events::emit<RedrawEvent>({ \\
    \&.win = (unsigned int)(*state\->win\&.unwrap())\->xwin, \\
  });           \\
}               \\
.fi

.PP
Definition at line \fB417\fP of file \fBcomponents\&.hpp\fP\&..PP
.nf
418                 { \\
419   events::emit<RedrawEvent>({ \\
420     \&.win = (unsigned int)(*state\->win\&.unwrap())\->xwin, \\
421   });           \\
422 }               \\
423 
.fi

.SS "#define RENDER   virtual bool is_drawable() const override {return true;} \fBCOMP_EVENT_HANDLER_OVERRIDE\fP(render, (\fBvg::vg_fragment_t\fP& graphics))"

.PP
Definition at line \fB295\fP of file \fBcomponents\&.hpp\fP\&.
.SS "#define SET_REFERENCE   if (init\&.ref) *(init\&.ref) ="

.PP
Definition at line \fB138\fP of file \fBcomponents\&.hpp\fP\&.
.SS "#define SET_WINDOW(\fBSTATE\fP)   (\fBSTATE\fP)\->win = it\->win"

.PP
Definition at line \fB139\fP of file \fBcomponents\&.hpp\fP\&.
.SS "#define STATE(NAME)   struct NAME##State: public \fBcydui::components::ComponentState\fP"

.PP
Definition at line \fB388\fP of file \fBcomponents\&.hpp\fP\&.
.SS "#define WHEN(VARIABLE)   [&,this]()\->component_builder_t { auto value = VARIABLE;"

.PP
Definition at line \fB229\fP of file \fBcomponents\&.hpp\fP\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for CYD-UI from the source code\&.
