.TH "cydstd::env" 3 "CYD-UI" \" -*- nroff -*-
.ad l
.nh
.SH NAME
cydstd::env \- Process environmental variables interface\&.  

.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBvar\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "std::string \fBget\fP (const std::string &ENVVAR)"
.br
.RI "Get the value of the environmental variable with name \fCENVVAR\fP "
.ti -1c
.RI "std::string \fBset\fP (const std::string &ENVVAR, const std::string &VALUE)"
.br
.RI "Set the value of the environmental variable with name \fCENVVAR\fP to \fCVALUE\fP "
.in -1c
.SH "Detailed Description"
.PP 
Process environmental variables interface\&. 

This namespace provides an abstraction over environmental variables\&. 
.SH "Function Documentation"
.PP 
.SS "std::string cydstd::env::get (const std::string & ENVVAR)\fC [inline]\fP"

.PP
Get the value of the environmental variable with name \fCENVVAR\fP 
.PP
\fBReturns\fP
.RS 4
\fCstd::string\fP containing the value of the variable 
.RE
.PP

.PP
\fBParameters\fP
.RS 4
\fIENVVAR\fP Variable name 
.RE
.PP

.PP
Definition at line \fB21\fP of file \fBenv\&.h\fP\&..PP
.nf
21                                                     {
22       return std::getenv(ENVVAR\&.c_str());
23     }
.fi

.SS "std::string cydstd::env::set (const std::string & ENVVAR, const std::string & VALUE)\fC [inline]\fP"

.PP
Set the value of the environmental variable with name \fCENVVAR\fP to \fCVALUE\fP 
.PP
\fBNote\fP
.RS 4
This function \fBoverwrites\fP the old value of the variable 
.RE
.PP
\fBReturns\fP
.RS 4
\fCstd::string\fP containing the \fBold value\fP of the variable 
.RE
.PP

.PP
\fBParameters\fP
.RS 4
\fIENVVAR\fP Variable name  
.br
\fIVALUE\fP New value 
.RE
.PP

.PP
Definition at line \fB30\fP of file \fBenv\&.h\fP\&..PP
.nf
33       {
34       std::string prev = get(ENVVAR);
35       setenv(ENVVAR\&.c_str(), VALUE\&.c_str(), true);
36       return prev;
37     }
.fi

.SH "Author"
.PP 
Generated automatically by Doxygen for CYD-UI from the source code\&.
