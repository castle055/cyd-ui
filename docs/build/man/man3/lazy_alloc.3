.TH "lazy_alloc< T, Args >" 3 "CYD-UI" \" -*- nroff -*-
.ad l
.nh
.SH NAME
lazy_alloc< T, Args >
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <lazy_alloc\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBlazy_alloc\fP (Args\&.\&.\&. args)"
.br
.ti -1c
.RI "\fB~lazy_alloc\fP ()=default"
.br
.ti -1c
.RI "\fBT\fP * \fBoperator\->\fP ()"
.br
.ti -1c
.RI "\fBoperator T*\fP ()"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "std::function< void(\fBlazy_alloc\fP< \fBT\fP > *)> \fBinit\fP"
.br
.ti -1c
.RI "std::shared_ptr< \fBT\fP > \fBval\fP = nullptr"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename \fBT\fP, typename \&.\&.\&. Args>
.br
struct lazy_alloc< T, Args >"
.PP
Definition at line \fB12\fP of file \fBlazy_alloc\&.h\fP\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<typename \fBT\fP , typename \&.\&.\&. Args> \fBlazy_alloc\fP< \fBT\fP, Args >\fB::lazy_alloc\fP (Args\&.\&.\&. args)\fC [inline]\fP, \fC [explicit]\fP"

.PP
Definition at line \fB13\fP of file \fBlazy_alloc\&.h\fP\&..PP
.nf
13                                     {
14     init = [args\&.\&.\&.](lazy_alloc<T>* self) {
15       self\->val = std::make_shared<T>(args\&.\&.\&.);
16     };
17   }
.fi

.SS "template<typename \fBT\fP , typename \&.\&.\&. Args> \fBlazy_alloc\fP< \fBT\fP, Args >::~\fBlazy_alloc\fP ()\fC [default]\fP"

.SH "Member Function Documentation"
.PP 
.SS "template<typename \fBT\fP , typename \&.\&.\&. Args> \fBlazy_alloc\fP< \fBT\fP, Args >::operator \fBT\fP* ()\fC [inline]\fP"

.PP
Definition at line \fB27\fP of file \fBlazy_alloc\&.h\fP\&..PP
.nf
27                 {
28     if (nullptr == val) {
29       init(this);
30     }
31     return val\&.get();
32   }
.fi

.SS "template<typename \fBT\fP , typename \&.\&.\&. Args> \fBT\fP * \fBlazy_alloc\fP< \fBT\fP, Args >::operator\-> ()\fC [inline]\fP"

.PP
Definition at line \fB20\fP of file \fBlazy_alloc\&.h\fP\&..PP
.nf
20                   {
21     if (nullptr == val) {
22       init(this);
23     }
24     return val\&.get();
25   }
.fi

.SH "Member Data Documentation"
.PP 
.SS "template<typename \fBT\fP , typename \&.\&.\&. Args> std::function<void(\fBlazy_alloc\fP<\fBT\fP>*)> \fBlazy_alloc\fP< \fBT\fP, Args >::init"
\fBInitial value:\fP.PP
.nf
= [](lazy_alloc<T>* self) {
    self\->val = std::make_shared<T>();
  }
.fi

.PP
Definition at line \fB34\fP of file \fBlazy_alloc\&.h\fP\&..PP
.nf
34                                                                    {
35     self\->val = std::make_shared<T>();
36   };
.fi

.SS "template<typename \fBT\fP , typename \&.\&.\&. Args> std::shared_ptr<\fBT\fP> \fBlazy_alloc\fP< \fBT\fP, Args >::val = nullptr"

.PP
Definition at line \fB37\fP of file \fBlazy_alloc\&.h\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for CYD-UI from the source code\&.
