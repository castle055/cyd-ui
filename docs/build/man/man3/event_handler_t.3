.TH "event_handler_t" 3 "CYD-UI" \" -*- nroff -*-
.ad l
.nh
.SH NAME
event_handler_t
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <component_event_handler\&.h>\fP
.PP
Inherited by \fBThreadTimelineEventHandler\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBcydui::dimensions::dimension_t\fP & \fB$x\fP () const"
.br
.ti -1c
.RI "\fBcydui::dimensions::dimension_t\fP & \fB$y\fP () const"
.br
.ti -1c
.RI "\fBcydui::dimensions::dimension_t\fP & \fB$w\fP () const"
.br
.ti -1c
.RI "\fBcydui::dimensions::dimension_t\fP & \fB$h\fP () const"
.br
.ti -1c
.RI "\fBcydui::dimensions::dimension_t\fP & \fB$cx\fP () const"
.br
.ti -1c
.RI "\fBcydui::dimensions::dimension_t\fP & \fB$cy\fP () const"
.br
.ti -1c
.RI "\fBcydui::dimensions::dimension_t\fP & \fB$cw\fP () const"
.br
.ti -1c
.RI "\fBcydui::dimensions::dimension_t\fP & \fB$ch\fP () const"
.br
.ti -1c
.RI "\fBcydui::dimensions::dimension_t\fP & \fB$margin_top\fP () const"
.br
.ti -1c
.RI "\fBcydui::dimensions::dimension_t\fP & \fB$margin_bottom\fP () const"
.br
.ti -1c
.RI "\fBcydui::dimensions::dimension_t\fP & \fB$margin_left\fP () const"
.br
.ti -1c
.RI "\fBcydui::dimensions::dimension_t\fP & \fB$margin_right\fP () const"
.br
.ti -1c
.RI "\fBcydui::dimensions::dimension_t\fP & \fB$padding_top\fP () const"
.br
.ti -1c
.RI "\fBcydui::dimensions::dimension_t\fP & \fB$padding_bottom\fP () const"
.br
.ti -1c
.RI "\fBcydui::dimensions::dimension_t\fP & \fB$padding_left\fP () const"
.br
.ti -1c
.RI "\fBcydui::dimensions::dimension_t\fP & \fB$padding_right\fP () const"
.br
.ti -1c
.RI "\fBevent_handler_t\fP ()=default"
.br
.ti -1c
.RI "virtual \fB~event_handler_t\fP ()=default"
.br
.ti -1c
.RI "virtual std::vector< component_holder_t > \fBon_redraw\fP ()"
.br
.ti -1c
.RI "virtual void \fBon_button_press\fP (\fBButton\fP button, int x, int y)"
.br
.ti -1c
.RI "virtual void \fBon_button_release\fP (\fBButton\fP button, int x, int y)"
.br
.ti -1c
.RI "virtual void \fBon_mouse_enter\fP (int x, int y)"
.br
.ti -1c
.RI "virtual void \fBon_mouse_exit\fP (int x, int y)"
.br
.ti -1c
.RI "virtual void \fBon_mouse_motion\fP (int x, int y)"
.br
.ti -1c
.RI "virtual void \fBon_scroll\fP (int dx, int dy)"
.br
.ti -1c
.RI "virtual void \fBon_key_press\fP (const \fBKeyEvent::DataType\fP &ev)"
.br
.ti -1c
.RI "virtual void \fBon_key_release\fP (const \fBKeyEvent::DataType\fP &ev)"
.br
.ti -1c
.RI "\fB_Pragma\fP ('message (\\'\fBTODO\fP \- \\' \\'\\\\\\'Implement a method to set an input context for text input\\\\\\'\\')') struct listener_data_t"
.br
.ti -1c
.RI "virtual std::unordered_map< std::string, listener_data_t > \fBget_event_listeners\fP ()"
.br
.ti -1c
.RI "virtual void \fBdraw_fragment\fP (\fBvg::vg_fragment_t\fP &fragment)"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "\fBevent_handler_t\fP * \fBparent\fP"
.br
.ti -1c
.RI "std::function< component_dimensional_relations_t()> \fBget_dim\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line \fB52\fP of file \fBcomponent_event_handler\&.h\fP\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "event_handler_t::event_handler_t ()\fC [default]\fP"

.SS "virtual event_handler_t::~event_handler_t ()\fC [virtual]\fP, \fC [default]\fP"

.SH "Member Function Documentation"
.PP 
.SS "\fBcydui::dimensions::dimension_t\fP & event_handler_t::$ch () const\fC [inline]\fP"

.PP
Definition at line \fB63\fP of file \fBcomponent_event_handler\&.h\fP\&.
.SS "\fBcydui::dimensions::dimension_t\fP & event_handler_t::$cw () const\fC [inline]\fP"

.PP
Definition at line \fB62\fP of file \fBcomponent_event_handler\&.h\fP\&.
.SS "\fBcydui::dimensions::dimension_t\fP & event_handler_t::$cx () const\fC [inline]\fP"

.PP
Definition at line \fB60\fP of file \fBcomponent_event_handler\&.h\fP\&.
.SS "\fBcydui::dimensions::dimension_t\fP & event_handler_t::$cy () const\fC [inline]\fP"

.PP
Definition at line \fB61\fP of file \fBcomponent_event_handler\&.h\fP\&.
.SS "\fBcydui::dimensions::dimension_t\fP & event_handler_t::$h () const\fC [inline]\fP"

.PP
Definition at line \fB59\fP of file \fBcomponent_event_handler\&.h\fP\&.
.SS "\fBcydui::dimensions::dimension_t\fP & event_handler_t::$margin_bottom () const\fC [inline]\fP"

.PP
Definition at line \fB65\fP of file \fBcomponent_event_handler\&.h\fP\&.
.SS "\fBcydui::dimensions::dimension_t\fP & event_handler_t::$margin_left () const\fC [inline]\fP"

.PP
Definition at line \fB66\fP of file \fBcomponent_event_handler\&.h\fP\&.
.SS "\fBcydui::dimensions::dimension_t\fP & event_handler_t::$margin_right () const\fC [inline]\fP"

.PP
Definition at line \fB67\fP of file \fBcomponent_event_handler\&.h\fP\&.
.SS "\fBcydui::dimensions::dimension_t\fP & event_handler_t::$margin_top () const\fC [inline]\fP"

.PP
Definition at line \fB64\fP of file \fBcomponent_event_handler\&.h\fP\&.
.SS "\fBcydui::dimensions::dimension_t\fP & event_handler_t::$padding_bottom () const\fC [inline]\fP"

.PP
Definition at line \fB69\fP of file \fBcomponent_event_handler\&.h\fP\&.
.SS "\fBcydui::dimensions::dimension_t\fP & event_handler_t::$padding_left () const\fC [inline]\fP"

.PP
Definition at line \fB70\fP of file \fBcomponent_event_handler\&.h\fP\&.
.SS "\fBcydui::dimensions::dimension_t\fP & event_handler_t::$padding_right () const\fC [inline]\fP"

.PP
Definition at line \fB71\fP of file \fBcomponent_event_handler\&.h\fP\&.
.SS "\fBcydui::dimensions::dimension_t\fP & event_handler_t::$padding_top () const\fC [inline]\fP"

.PP
Definition at line \fB68\fP of file \fBcomponent_event_handler\&.h\fP\&.
.SS "\fBcydui::dimensions::dimension_t\fP & event_handler_t::$w () const\fC [inline]\fP"

.PP
Definition at line \fB58\fP of file \fBcomponent_event_handler\&.h\fP\&.
.SS "\fBcydui::dimensions::dimension_t\fP & event_handler_t::$x () const\fC [inline]\fP"

.PP
Definition at line \fB56\fP of file \fBcomponent_event_handler\&.h\fP\&.
.SS "\fBcydui::dimensions::dimension_t\fP & event_handler_t::$y () const\fC [inline]\fP"

.PP
Definition at line \fB57\fP of file \fBcomponent_event_handler\&.h\fP\&.
.SS "event_handler_t::_Pragma ('message (\\'\fBTODO\fP \- \\' \\'\\\\\\'Implement a method to set an input context for text input\\\\\\'\\')')\fC [inline]\fP"

.PP
Definition at line \fB138\fP of file \fBcomponent_event_handler\&.h\fP\&..PP
.nf
140                          {
141     std::function<void(cydui::events::Event*)> handler {};
142   };
.fi

.SS "virtual void event_handler_t::draw_fragment (\fBvg::vg_fragment_t\fP & fragment)\fC [inline]\fP, \fC [virtual]\fP"

.PP
Definition at line \fB147\fP of file \fBcomponent_event_handler\&.h\fP\&..PP
.nf
147                                                         {
148   
149   }
.fi

.SS "virtual std::unordered_map< std::string, listener_data_t > event_handler_t::get_event_listeners ()\fC [inline]\fP, \fC [virtual]\fP"

.PP
Definition at line \fB143\fP of file \fBcomponent_event_handler\&.h\fP\&..PP
.nf
143                                                                              {
144     return {};
145   }
.fi

.SS "virtual void event_handler_t::on_button_press (\fBButton\fP button, int x, int y)\fC [inline]\fP, \fC [virtual]\fP"

.PP
Definition at line \fB95\fP of file \fBcomponent_event_handler\&.h\fP\&..PP
.nf
95                                                {
96     CYDUI_INTERNAL_EV_button_PROPAGATE(press);
97   }
.fi

.SS "virtual void event_handler_t::on_button_release (\fBButton\fP button, int x, int y)\fC [inline]\fP, \fC [virtual]\fP"

.PP
Definition at line \fB100\fP of file \fBcomponent_event_handler\&.h\fP\&..PP
.nf
100                                                  {
101     CYDUI_INTERNAL_EV_button_PROPAGATE(release);
102   }
.fi

.SS "virtual void event_handler_t::on_key_press (const \fBKeyEvent::DataType\fP & ev)\fC [inline]\fP, \fC [virtual]\fP"

.PP
Definition at line \fB127\fP of file \fBcomponent_event_handler\&.h\fP\&..PP
.nf
127                                             {
128     if (parent)
129       parent\->on_key_press(ev);
130   }
.fi

.SS "virtual void event_handler_t::on_key_release (const \fBKeyEvent::DataType\fP & ev)\fC [inline]\fP, \fC [virtual]\fP"

.PP
Definition at line \fB133\fP of file \fBcomponent_event_handler\&.h\fP\&..PP
.nf
133                                               {
134     if (parent)
135       parent\->on_key_release(ev);
136   }
.fi

.SS "virtual void event_handler_t::on_mouse_enter (int x, int y)\fC [inline]\fP, \fC [virtual]\fP"

.PP
Definition at line \fB105\fP of file \fBcomponent_event_handler\&.h\fP\&..PP
.nf
105                                               {
106     CYDUI_INTERNAL_EV_mouse_PROPAGATE(enter);
107   }
.fi

.SS "virtual void event_handler_t::on_mouse_exit (int x, int y)\fC [inline]\fP, \fC [virtual]\fP"

.PP
Definition at line \fB110\fP of file \fBcomponent_event_handler\&.h\fP\&..PP
.nf
110                                              {
111     CYDUI_INTERNAL_EV_mouse_PROPAGATE(exit);
112   }
.fi

.SS "virtual void event_handler_t::on_mouse_motion (int x, int y)\fC [inline]\fP, \fC [virtual]\fP"

.PP
Definition at line \fB115\fP of file \fBcomponent_event_handler\&.h\fP\&..PP
.nf
115                                                {
116     CYDUI_INTERNAL_EV_mouse_PROPAGATE(motion);
117   }
.fi

.SS "virtual std::vector< component_holder_t > event_handler_t::on_redraw ()\fC [inline]\fP, \fC [virtual]\fP"

.PP
Definition at line \fB79\fP of file \fBcomponent_event_handler\&.h\fP\&..PP
.nf
79 {return {};}
.fi

.SS "virtual void event_handler_t::on_scroll (int dx, int dy)\fC [inline]\fP, \fC [virtual]\fP"

.PP
Definition at line \fB119\fP of file \fBcomponent_event_handler\&.h\fP\&..PP
.nf
119                                          {
120     if (parent)
121       parent\->on_scroll(dx, dy);
122   }
.fi

.SH "Member Data Documentation"
.PP 
.SS "std::function<component_dimensional_relations_t()> event_handler_t::get_dim"

.PP
Definition at line \fB55\fP of file \fBcomponent_event_handler\&.h\fP\&.
.SS "\fBevent_handler_t\fP* event_handler_t::parent"

.PP
Definition at line \fB53\fP of file \fBcomponent_event_handler\&.h\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for CYD-UI from the source code\&.
