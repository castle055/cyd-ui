.TH "TransparentEventHandler< T >" 3 "CYD-UI" \" -*- nroff -*-
.ad l
.nh
.SH NAME
TransparentEventHandler< T >
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <component_test\&.h>\fP
.PP
Inherits \fBevent_handler_t\fP, and \fBTransparentEventHandlerData< T >\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "std::vector< \fBcomponent_holder_t\fP > \fBon_redraw\fP () override"
.br
.in -1c

Public Member Functions inherited from \fBevent_handler_t\fP
.in +1c
.ti -1c
.RI "\fBcydui::dimensions::dimension_t\fP & \fB$x\fP () const"
.br
.ti -1c
.RI "\fBcydui::dimensions::dimension_t\fP & \fB$y\fP () const"
.br
.ti -1c
.RI "\fBcydui::dimensions::dimension_t\fP & \fB$w\fP () const"
.br
.ti -1c
.RI "\fBcydui::dimensions::dimension_t\fP & \fB$h\fP () const"
.br
.ti -1c
.RI "\fBcydui::dimensions::dimension_t\fP & \fB$cx\fP () const"
.br
.ti -1c
.RI "\fBcydui::dimensions::dimension_t\fP & \fB$cy\fP () const"
.br
.ti -1c
.RI "\fBcydui::dimensions::dimension_t\fP & \fB$cw\fP () const"
.br
.ti -1c
.RI "\fBcydui::dimensions::dimension_t\fP & \fB$ch\fP () const"
.br
.ti -1c
.RI "\fBcydui::dimensions::dimension_t\fP & \fB$margin_top\fP () const"
.br
.ti -1c
.RI "\fBcydui::dimensions::dimension_t\fP & \fB$margin_bottom\fP () const"
.br
.ti -1c
.RI "\fBcydui::dimensions::dimension_t\fP & \fB$margin_left\fP () const"
.br
.ti -1c
.RI "\fBcydui::dimensions::dimension_t\fP & \fB$margin_right\fP () const"
.br
.ti -1c
.RI "\fBcydui::dimensions::dimension_t\fP & \fB$padding_top\fP () const"
.br
.ti -1c
.RI "\fBcydui::dimensions::dimension_t\fP & \fB$padding_bottom\fP () const"
.br
.ti -1c
.RI "\fBcydui::dimensions::dimension_t\fP & \fB$padding_left\fP () const"
.br
.ti -1c
.RI "\fBcydui::dimensions::dimension_t\fP & \fB$padding_right\fP () const"
.br
.ti -1c
.RI "\fBevent_handler_t\fP ()=default"
.br
.ti -1c
.RI "virtual \fB~event_handler_t\fP ()=default"
.br
.ti -1c
.RI "virtual void \fBon_button_press\fP (\fBButton\fP button, int x, int y)"
.br
.ti -1c
.RI "virtual void \fBon_button_release\fP (\fBButton\fP button, int x, int y)"
.br
.ti -1c
.RI "virtual void \fBon_mouse_enter\fP (int x, int y)"
.br
.ti -1c
.RI "virtual void \fBon_mouse_exit\fP (int x, int y)"
.br
.ti -1c
.RI "virtual void \fBon_mouse_motion\fP (int x, int y)"
.br
.ti -1c
.RI "virtual void \fBon_scroll\fP (int dx, int dy)"
.br
.ti -1c
.RI "virtual void \fBon_key_press\fP (const \fBKeyEvent::DataType\fP &ev)"
.br
.ti -1c
.RI "virtual void \fBon_key_release\fP (const \fBKeyEvent::DataType\fP &ev)"
.br
.ti -1c
.RI "\fB_Pragma\fP ('message (\\'\fBTODO\fP \- \\' \\'\\\\\\'Implement a method to set an input context for text input\\\\\\'\\')') struct listener_data_t"
.br
.ti -1c
.RI "virtual std::unordered_map< std::string, listener_data_t > \fBget_event_listeners\fP ()"
.br
.ti -1c
.RI "virtual void \fBdraw_fragment\fP (\fBvg::vg_fragment_t\fP &fragment)"
.br
.in -1c
.SS "Additional Inherited Members"


Public Attributes inherited from \fBevent_handler_t\fP
.in +1c
.ti -1c
.RI "\fBevent_handler_t\fP * \fBparent\fP"
.br
.ti -1c
.RI "std::function< \fBcomponent_dimensional_relations_t\fP()> \fBget_dim\fP"
.br
.in -1c

Public Attributes inherited from \fBTransparentEventHandlerData< T >\fP
.in +1c
.ti -1c
.RI "\fBTransparentState\fP< \fBT\fP > * \fBstate\fP"
.br
.ti -1c
.RI "\fBTransparent\fP< \fBT\fP >::props_t * \fBprops\fP"
.br
.ti -1c
.RI "\fBlogging::logger\fP \fBlog\fP {\&.name = 'Transparent'}"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename \fBT\fP>
.br
struct TransparentEventHandler< T >"
.PP
Definition at line \fB26\fP of file \fBcomponent_test\&.h\fP\&.
.SH "Member Function Documentation"
.PP 
.SS "template<typename \fBT\fP > std::vector< \fBcomponent_holder_t\fP > \fBTransparentEventHandler\fP< \fBT\fP >::on_redraw ()\fC [inline]\fP, \fC [override]\fP, \fC [virtual]\fP"

.PP
Reimplemented from \fBevent_handler_t\fP\&.
.PP
Definition at line \fB27\fP of file \fBcomponent_test\&.h\fP\&..PP
.nf
27             {
28     return {
29       T {this\->props\->props},
30     };
31   }
.fi


.SH "Author"
.PP 
Generated automatically by Doxygen for CYD-UI from the source code\&.
