.TH "cydui::components::component_state_t" 3 "CYD-UI" \" -*- nroff -*-
.ad l
.nh
.SH NAME
cydui::components::component_state_t
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <component\&.h>\fP
.PP
Inherited by \fBcomponent_state_template< C >\fP, \fBcomponent_state_template< ThreadTimeline >\fP, and \fBstdui::layout::component_state_template< Grid >\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "void \fBmark_dirty\fP ()"
.br
.RI "Marks this component state as needing to be redrawn\&. "
.ti -1c
.RI "template<\fBcydui::events::EventType\fP T> void \fBemit\fP (typename T::DataType ev)"
.br
.ti -1c
.RI "void \fBforce_redraw\fP ()"
.br
.RI "Emits a \fBRedrawEvent\fP for this component\&. "
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "\fBwindow::CWindow\fP * \fBwin\fP = nullptr"
.br
.ti -1c
.RI "std::optional< \fBcomponent_state_t\fP * > \fBparent\fP = std::nullopt"
.br
.ti -1c
.RI "std::unordered_map< std::string, \fBcomponent_state_t\fP * > \fBchildren_states\fP {}"
.br
.ti -1c
.RI "bool \fB_dirty\fP = false"
.br
.ti -1c
.RI "bool \fBfocused\fP = false"
.br
.ti -1c
.RI "bool \fBhovering\fP = false"
.br
.ti -1c
.RI "std::optional< \fBcomponent_base_t\fP * > \fBcomponent_instance\fP = std::nullopt"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line \fB25\fP of file \fBcomponent\&.h\fP\&.
.SH "Member Function Documentation"
.PP 
.SS "template<\fBcydui::events::EventType\fP T> void cydui::components::component_state_t::emit (typename T::DataType ev)\fC [inline]\fP"

.PP
Definition at line \fB56\fP of file \fBcomponent\&.h\fP\&..PP
.nf
56                                        {
57         if (nullptr == this\->win) return;
58         ev\&.win = get_id(this\->win\->win_ref);
59         cydui::events::emit<T>(ev);
60       }
.fi

.SS "void cydui::components::component_state_t::force_redraw ()\fC [inline]\fP"

.PP
Emits a \fBRedrawEvent\fP for this component\&. 
.PP
\fBWarning\fP
.RS 4
This is only meant to be called from custom event handlers\&. Event handlers for events declared in \fC\fBcydui_events\&.h\fP\fP automatically trigger a redraw if \fCstate->\fBmark_dirty()\fP\fP gets called\&. Use that instead\&. 
.RE
.PP

.PP
Definition at line \fB70\fP of file \fBcomponent\&.h\fP\&..PP
.nf
70                           {
71         emit<RedrawEvent>({\&.component = this});
72       }
.fi

.SS "void cydui::components::component_state_t::mark_dirty ()\fC [inline]\fP"

.PP
Marks this component state as needing to be redrawn\&. Events declared in \fC\fBcydui_events\&.h\fP\fP are dispatched automatically by the layout, which then checks for any \fCdirty\fP components that need redrawing\&.
.PP
It is due diligence of the component developer to appropriately mark the component as dirty when appropriate\&. As a baseline, any mutation to the state of a component should mark it dirty if said mutation affects how the component, or its children, are rendered\&. 
.PP
Definition at line \fB51\fP of file \fBcomponent\&.h\fP\&..PP
.nf
51                         {
52         _dirty = true;
53       }
.fi

.SH "Member Data Documentation"
.PP 
.SS "bool cydui::components::component_state_t::_dirty = false"

.PP
Definition at line \fB31\fP of file \fBcomponent\&.h\fP\&.
.SS "std::unordered_map<std::string, \fBcomponent_state_t\fP*> cydui::components::component_state_t::children_states {}"

.PP
Definition at line \fB29\fP of file \fBcomponent\&.h\fP\&..PP
.nf
29 {};
.fi

.SS "std::optional<\fBcomponent_base_t\fP*> cydui::components::component_state_t::component_instance = std::nullopt"

.PP
Definition at line \fB36\fP of file \fBcomponent\&.h\fP\&.
.SS "bool cydui::components::component_state_t::focused = false"

.PP
Definition at line \fB33\fP of file \fBcomponent\&.h\fP\&.
.SS "bool cydui::components::component_state_t::hovering = false"

.PP
Definition at line \fB34\fP of file \fBcomponent\&.h\fP\&.
.SS "std::optional<\fBcomponent_state_t\fP*> cydui::components::component_state_t::parent = std::nullopt"

.PP
Definition at line \fB28\fP of file \fBcomponent\&.h\fP\&.
.SS "\fBwindow::CWindow\fP* cydui::components::component_state_t::win = nullptr"

.PP
Definition at line \fB26\fP of file \fBcomponent\&.h\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for CYD-UI from the source code\&.
