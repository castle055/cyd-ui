.TH "cydui::window" 3 "CYD-UI" \" -*- nroff -*-
.ad l
.nh
.SH NAME
cydui::window
.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBCWindow\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBCWindow\fP * \fBcreate\fP (\fBlayout::Layout\fP *layout, const char *title='CydUI', const char *wclass='cydui', int x=0, int y=0, int w=640, int h=480, bool override_redirect=false)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "\fBCWindow\fP * cydui::window::create (\fBlayout::Layout\fP * layout, const char * title = \fC'CydUI'\fP, const char * wclass = \fC'cydui'\fP, int x = \fC0\fP, int y = \fC0\fP, int w = \fC640\fP, int h = \fC480\fP, bool override_redirect = \fCfalse\fP)"

.PP
Definition at line \fB27\fP of file \fBwindow\&.cpp\fP\&..PP
.nf
36   {
37   auto win = new CWindow();
38   auto* win_ref = graphics::create_window(&win\->profiling_ctx, title, wclass, x, y, w, h, override_redirect);
39   win\->layout = layout;
40   win\->win_ref = win_ref;
41   
42   layout\->bind_window(win);
43   
44   //windows\&.push_back(win);
45   
46   events::start();
47   
48   // Once all threads have started and everything is set up for this window
49   // force a complete redraw
50   //events::emit<RedrawEvent>({\&.win = (unsigned int) win_ref\->xwin});
51   //events::emit<RedrawEvent>({ });
52   //events::emit<RedrawEvent>({\&.win = get_id(win_ref)});
53   
54   return win;
55 }
.fi

.SH "Author"
.PP 
Generated automatically by Doxygen for CYD-UI from the source code\&.
