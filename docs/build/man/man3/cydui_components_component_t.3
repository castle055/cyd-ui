.TH "cydui::components::component_t< EVH, T >" 3 "CYD-UI" \" -*- nroff -*-
.ad l
.nh
.SH NAME
cydui::components::component_t< EVH, T >
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <component\&.h>\fP
.PP
Inherits \fBcydui::components::component_base_t\fP, and \fBattrs_component< T >\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fB~component_t\fP () override"
.br
.ti -1c
.RI "void \fBconfigure_event_handler\fP () override"
.br
.ti -1c
.RI "void \fBsubscribe_events\fP () override"
.br
.ti -1c
.RI "void \fBclear_children\fP () override"
.br
.ti -1c
.RI "\fBcomponent_state_t\fP * \fBcreate_state_instance\fP () override"
.br
.ti -1c
.RI "\fBevent_handler_t\fP * \fBevent_handler\fP () override"
.br
.ti -1c
.RI "void \fBredraw\fP (\fBcydui::layout::Layout\fP *layout) override"
.br
.ti -1c
.RI "void \fBget_fragment\fP (\fBcydui::layout::Layout\fP *layout, \fBcydui::compositing::compositing_node_t\fP *compositing_node) override"
.br
.ti -1c
.RI "\fBcomponent_base_t\fP * \fBfind_by_coords\fP (int \fBx\fP, int \fBy\fP) override"
.br
.ti -1c
.RI "\fBcomponent_dimensional_relations_t\fP \fBget_dimensional_relations\fP () override"
.br
.in -1c

Public Member Functions inherited from \fBcydui::components::component_base_t\fP
.in +1c
.ti -1c
.RI "virtual \fB~component_base_t\fP ()"
.br
.in -1c

Public Member Functions inherited from \fBattr_x< T >\fP
.in +1c
.ti -1c
.RI "\fBT\fP & \fBx\fP (auto &_x_)"
.br
.ti -1c
.RI "\fBT\fP & \fBx\fP (auto &&_x_)"
.br
.in -1c

Public Member Functions inherited from \fBattr_y< T >\fP
.in +1c
.ti -1c
.RI "\fBT\fP & \fBy\fP (auto &_y_)"
.br
.ti -1c
.RI "\fBT\fP & \fBy\fP (auto &&_y_)"
.br
.in -1c

Public Member Functions inherited from \fBattr_w< T >\fP
.in +1c
.ti -1c
.RI "\fBT\fP & \fBw\fP (auto &_w_)"
.br
.ti -1c
.RI "\fBT\fP & \fBw\fP (auto &&_w_)"
.br
.in -1c

Public Member Functions inherited from \fBattr_h< T >\fP
.in +1c
.ti -1c
.RI "\fBT\fP & \fBh\fP (auto &_h_)"
.br
.ti -1c
.RI "\fBT\fP & \fBh\fP (auto &&_h_)"
.br
.in -1c

Public Member Functions inherited from \fBattr_margin_top< T >\fP
.in +1c
.ti -1c
.RI "\fBT\fP & \fBmargin_top\fP (auto &_margin_top_)"
.br
.ti -1c
.RI "\fBT\fP & \fBmargin_top\fP (auto &&_margin_top_)"
.br
.in -1c

Public Member Functions inherited from \fBattr_margin_bottom< T >\fP
.in +1c
.ti -1c
.RI "\fBT\fP & \fBmargin_bottom\fP (auto &_margin_bottom_)"
.br
.ti -1c
.RI "\fBT\fP & \fBmargin_bottom\fP (auto &&_margin_bottom_)"
.br
.in -1c

Public Member Functions inherited from \fBattr_margin_left< T >\fP
.in +1c
.ti -1c
.RI "\fBT\fP & \fBmargin_left\fP (auto &_margin_left_)"
.br
.ti -1c
.RI "\fBT\fP & \fBmargin_left\fP (auto &&_margin_left_)"
.br
.in -1c

Public Member Functions inherited from \fBattr_margin_right< T >\fP
.in +1c
.ti -1c
.RI "\fBT\fP & \fBmargin_right\fP (auto &_margin_right_)"
.br
.ti -1c
.RI "\fBT\fP & \fBmargin_right\fP (auto &&_margin_right_)"
.br
.in -1c

Public Member Functions inherited from \fBattr_padding_top< T >\fP
.in +1c
.ti -1c
.RI "\fBT\fP & \fBpadding_top\fP (auto &_padding_top_)"
.br
.ti -1c
.RI "\fBT\fP & \fBpadding_top\fP (auto &&_padding_top_)"
.br
.in -1c

Public Member Functions inherited from \fBattr_padding_bottom< T >\fP
.in +1c
.ti -1c
.RI "\fBT\fP & \fBpadding_bottom\fP (auto &_padding_bottom_)"
.br
.ti -1c
.RI "\fBT\fP & \fBpadding_bottom\fP (auto &&_padding_bottom_)"
.br
.in -1c

Public Member Functions inherited from \fBattr_padding_left< T >\fP
.in +1c
.ti -1c
.RI "\fBT\fP & \fBpadding_left\fP (auto &_padding_left_)"
.br
.ti -1c
.RI "\fBT\fP & \fBpadding_left\fP (auto &&_padding_left_)"
.br
.in -1c

Public Member Functions inherited from \fBattr_padding_right< T >\fP
.in +1c
.ti -1c
.RI "\fBT\fP & \fBpadding_right\fP (auto &_padding_right_)"
.br
.ti -1c
.RI "\fBT\fP & \fBpadding_right\fP (auto &&_padding_right_)"
.br
.in -1c

Public Member Functions inherited from \fBattr_content< T >\fP
.in +1c
.ti -1c
.RI "\fBT\fP & \fBoperator()\fP (auto &&_content_)"
.br
.ti -1c
.RI "\fBT\fP & \fBoperator()\fP (auto &_content_)"
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "\fBcydui::dimensions::dimension_t\fP \fBcx\fP"
.br
.RI "Private attributes\&. "
.ti -1c
.RI "\fBcydui::dimensions::dimension_t\fP \fBcy\fP"
.br
.ti -1c
.RI "\fBcydui::dimensions::dimension_t\fP \fBcw\fP"
.br
.ti -1c
.RI "\fBcydui::dimensions::dimension_t\fP \fBch\fP"
.br
.ti -1c
.RI "\fBlazy_alloc\fP< EVH > \fBevent_handler_\fP {}"
.br
.in -1c
.SS "Additional Inherited Members"


Public Attributes inherited from \fBcydui::components::component_base_t\fP
.in +1c
.ti -1c
.RI "std::optional< \fBcomponent_state_t\fP * > \fBstate\fP = std::nullopt"
.br
.ti -1c
.RI "std::optional< \fBcomponent_base_t\fP * > \fBparent\fP = std::nullopt"
.br
.ti -1c
.RI "std::vector< \fBcomponent_base_t\fP * > \fBchildren\fP {}"
.br
.ti -1c
.RI "std::vector< \fBcydui::events::listener_t\fP * > \fBsubscribed_listeners\fP {}"
.br
.in -1c

Public Attributes inherited from \fBattr_x< T >\fP
.in +1c
.ti -1c
.RI "\fBcydui::dimensions::dimension_t\fP \fB_x\fP"
.br
.in -1c

Public Attributes inherited from \fBattr_y< T >\fP
.in +1c
.ti -1c
.RI "\fBcydui::dimensions::dimension_t\fP \fB_y\fP"
.br
.in -1c

Public Attributes inherited from \fBattr_w< T >\fP
.in +1c
.ti -1c
.RI "\fBcydui::dimensions::dimension_t\fP \fB_w\fP"
.br
.ti -1c
.RI "bool \fB_w_has_changed\fP"
.br
.in -1c

Public Attributes inherited from \fBattr_h< T >\fP
.in +1c
.ti -1c
.RI "\fBcydui::dimensions::dimension_t\fP \fB_h\fP"
.br
.ti -1c
.RI "bool \fB_h_has_changed\fP"
.br
.in -1c

Public Attributes inherited from \fBattr_margin_top< T >\fP
.in +1c
.ti -1c
.RI "\fBcydui::dimensions::dimension_t\fP \fB_margin_top\fP"
.br
.in -1c

Public Attributes inherited from \fBattr_margin_bottom< T >\fP
.in +1c
.ti -1c
.RI "\fBcydui::dimensions::dimension_t\fP \fB_margin_bottom\fP"
.br
.in -1c

Public Attributes inherited from \fBattr_margin_left< T >\fP
.in +1c
.ti -1c
.RI "\fBcydui::dimensions::dimension_t\fP \fB_margin_left\fP"
.br
.in -1c

Public Attributes inherited from \fBattr_margin_right< T >\fP
.in +1c
.ti -1c
.RI "\fBcydui::dimensions::dimension_t\fP \fB_margin_right\fP"
.br
.in -1c

Public Attributes inherited from \fBattr_padding_top< T >\fP
.in +1c
.ti -1c
.RI "\fBcydui::dimensions::dimension_t\fP \fB_padding_top\fP"
.br
.in -1c

Public Attributes inherited from \fBattr_padding_bottom< T >\fP
.in +1c
.ti -1c
.RI "\fBcydui::dimensions::dimension_t\fP \fB_padding_bottom\fP"
.br
.in -1c

Public Attributes inherited from \fBattr_padding_left< T >\fP
.in +1c
.ti -1c
.RI "\fBcydui::dimensions::dimension_t\fP \fB_padding_left\fP"
.br
.in -1c

Public Attributes inherited from \fBattr_padding_right< T >\fP
.in +1c
.ti -1c
.RI "\fBcydui::dimensions::dimension_t\fP \fB_padding_right\fP"
.br
.in -1c

Public Attributes inherited from \fBattr_content< T >\fP
.in +1c
.ti -1c
.RI "std::function< \fBcontent\fP()> \fB_content\fP"
.br
.in -1c

Protected Member Functions inherited from \fBcydui::components::component_base_t\fP
.in +1c
.ti -1c
.RI "void \fBadd_event_listeners\fP (const std::unordered_map< std::string, event_handler_t::listener_data_t > &listeners)"
.br
.ti -1c
.RI "void \fBclear_subscribed_listeners\fP ()"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<ComponentEventHandlerConcept EVH, typename \fBT\fP>
.br
struct cydui::components::component_t< EVH, T >"
.PP
Definition at line \fB120\fP of file \fBcomponent\&.h\fP\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<ComponentEventHandlerConcept EVH, typename \fBT\fP > \fBcydui::components::component_t\fP< EVH, \fBT\fP >::~\fBcomponent_t\fP ()\fC [inline]\fP, \fC [override]\fP"

.PP
Definition at line \fB132\fP of file \fBcomponent\&.h\fP\&..PP
.nf
132                               {
133         clear_subscribed_listeners();
134         if (state\&.has_value()) {
135           state\&.value()\->component_instance = std::nullopt;
136         }
137       };
.fi

.SH "Member Function Documentation"
.PP 
.SS "template<ComponentEventHandlerConcept EVH, typename \fBT\fP > void \fBcydui::components::component_t\fP< EVH, \fBT\fP >::clear_children ()\fC [inline]\fP, \fC [override]\fP, \fC [virtual]\fP"

.PP
Implements \fBcydui::components::component_base_t\fP\&.
.PP
Definition at line \fB156\fP of file \fBcomponent\&.h\fP\&..PP
.nf
156                                      {
157         for (auto &child: children) {
158           delete child;
159         }
160         children\&.clear();
161       }
.fi

.SS "template<ComponentEventHandlerConcept EVH, typename \fBT\fP > void \fBcydui::components::component_t\fP< EVH, \fBT\fP >::configure_event_handler ()\fC [inline]\fP, \fC [override]\fP, \fC [virtual]\fP"

.PP
Implements \fBcydui::components::component_base_t\fP\&.
.PP
Definition at line \fB139\fP of file \fBcomponent\&.h\fP\&..PP
.nf
139                                               {
140         if (parent\&.has_value()) {
141           event_handler_\->parent = parent\&.value()\->event_handler();
142         } else {
143           event_handler_\->parent = nullptr;
144         }
145         EVH* evh = event_handler_\&.operator\->();
146         evh\->state = (typename T::state_t*) state\&.value();
147         evh\->props = &(((T*) this)\->props);
148         evh\->attrs = (attrs_component<T>*) this;
149         evh\->get_dim = [this] {return get_dimensional_relations();};
150       }
.fi

.SS "template<ComponentEventHandlerConcept EVH, typename \fBT\fP > \fBcomponent_state_t\fP * \fBcydui::components::component_t\fP< EVH, \fBT\fP >::create_state_instance ()\fC [inline]\fP, \fC [override]\fP, \fC [virtual]\fP"

.PP
Implements \fBcydui::components::component_base_t\fP\&.
.PP
Definition at line \fB163\fP of file \fBcomponent\&.h\fP\&..PP
.nf
163                                                           {
164         return new typename T::state_t;
165       }
.fi

.SS "template<ComponentEventHandlerConcept EVH, typename \fBT\fP > \fBevent_handler_t\fP * \fBcydui::components::component_t\fP< EVH, \fBT\fP >::event_handler ()\fC [inline]\fP, \fC [override]\fP, \fC [virtual]\fP"

.PP
Implements \fBcydui::components::component_base_t\fP\&.
.PP
Definition at line \fB166\fP of file \fBcomponent\&.h\fP\&..PP
.nf
166                                                 {
167         return event_handler_;
168       }
.fi

.SS "template<ComponentEventHandlerConcept EVH, typename \fBT\fP > \fBcomponent_base_t\fP * \fBcydui::components::component_t\fP< EVH, \fBT\fP >::find_by_coords (int x, int y)\fC [inline]\fP, \fC [override]\fP, \fC [virtual]\fP"

.PP
Implements \fBcydui::components::component_base_t\fP\&.
.PP
Definition at line \fB252\fP of file \fBcomponent\&.h\fP\&..PP
.nf
252                                                               {
253         component_base_t* found = nullptr;
254         for (auto c = children\&.rbegin(); c != children\&.rend(); ++c) {
255           found = (*c)\->find_by_coords(x, y);
256           if (nullptr != found) {
257             return found;
258           }
259         }
260         if (cx\&.val() <= x && x < cx\&.val() + cw\&.val()) {
261           if (cy\&.val() <= y && y < cy\&.val() + ch\&.val()) {
262             return this;
263           }
264         }
265         return nullptr;
266       }
.fi

.SS "template<ComponentEventHandlerConcept EVH, typename \fBT\fP > \fBcomponent_dimensional_relations_t\fP \fBcydui::components::component_t\fP< EVH, \fBT\fP >::get_dimensional_relations ()\fC [inline]\fP, \fC [override]\fP, \fC [virtual]\fP"

.PP
Implements \fBcydui::components::component_base_t\fP\&.
.PP
Definition at line \fB268\fP of file \fBcomponent\&.h\fP\&..PP
.nf
268                                                                              {
269         return {
270           this\->_x,
271           this\->_y,
272           this\->_w,
273           this\->_h,
274           this\->_w_has_changed,
275           this\->_h_has_changed,
276           this\->cx,
277           this\->cy,
278           this\->cw,
279           this\->ch,
280           this\->_margin_top,
281           this\->_margin_bottom,
282           this\->_margin_left,
283           this\->_margin_right,
284           this\->_padding_top,
285           this\->_padding_bottom,
286           this\->_padding_left,
287           this\->_padding_right,
288         };
289       }
.fi

.SS "template<ComponentEventHandlerConcept EVH, typename \fBT\fP > void \fBcydui::components::component_t\fP< EVH, \fBT\fP >::get_fragment (\fBcydui::layout::Layout\fP * layout, \fBcydui::compositing::compositing_node_t\fP * compositing_node)\fC [inline]\fP, \fC [override]\fP, \fC [virtual]\fP"

.PP
Implements \fBcydui::components::component_base_t\fP\&.
.PP
Definition at line \fB216\fP of file \fBcomponent\&.h\fP\&..PP
.nf
216                                                                                                              {
217         for (auto &child: children) {
218           auto* child_node = new cydui::compositing::compositing_node_t;
219           compositing_node\->children\&.push_back(child_node);
220           child\->get_fragment(layout, child_node);
221         }
222         
223         compositing_node\->id = (unsigned long) (this\->state\&.value());
224         compositing_node\->op = {
225           \&.x = this\->_x\&.val(),
226           \&.y = this\->_y\&.val(),
227           \&.orig_x = this\->_margin_left\&.val() + this\->_padding_left\&.val(),
228           \&.orig_y = this\->_margin_top\&.val() + this\->_padding_top\&.val(),
229           \&.w = this\->_w\&.val(),
230           \&.h = this\->_h\&.val(),
231           \&.rot = 0\&.0, // dim\->rot\&.val(),
232           \&.scale_x = 1\&.0, // dim\->scale_x\&.val(),
233           \&.scale_y = 1\&.0, // dim\->scale_y\&.val(),
234         };
235         
236         auto &fragment = compositing_node\->graphics;
237         fragment\&.clear();
238         event_handler_\->draw_fragment(fragment);
239         if (!fragment\&.empty()) {
240           for (const auto &elem: fragment\&.elements) {
241             auto fp = elem\->get_footprint();
242             if (fp\&.x + fp\&.w > compositing_node\->op\&.w) {
243               compositing_node\->op\&.w = fp\&.x + fp\&.w;
244             }
245             if (fp\&.y + fp\&.h > compositing_node\->op\&.h) {
246               compositing_node\->op\&.h = fp\&.y + fp\&.h;
247             }
248           }
249         }
250       }
.fi

.SS "template<ComponentEventHandlerConcept EVH, typename \fBT\fP > void \fBcydui::components::component_t\fP< EVH, \fBT\fP >::redraw (\fBcydui::layout::Layout\fP * layout)\fC [inline]\fP, \fC [override]\fP, \fC [virtual]\fP"

.PP
Implements \fBcydui::components::component_base_t\fP\&.
.PP
Definition at line \fB170\fP of file \fBcomponent\&.h\fP\&..PP
.nf
170                                                       {
171         std::vector<component_holder_t> new_children = this\->_content();
172         std::vector<component_holder_t> redraw_children = event_handler_\->on_redraw();
173         for (auto &item: redraw_children) {
174           new_children\&.push_back(item);
175         }
176         
177         std::size_t id_i = 0;
178         for (auto &item: new_children) {
179           for (auto &component_pair: item\&.get_components()) {
180             auto [id_, component] = component_pair;
181             std::string id = id_;
182             id\&.append(":");
183             id\&.append(std::to_string(id_i));
184             
185             // Get or Create state for component
186             component_state_t* child_state;
187             if (state\&.value()\->children_states\&.contains(id)) {
188               child_state = state\&.value()\->children_states[id];
189             } else {
190               child_state = component\->create_state_instance();
191               state\&.value()\->children_states[id] = child_state;
192             }
193             
194             // Set child's variables
195             component\->state = child_state;
196             child_state\->win = state\&.value()\->win;
197             child_state\->parent = state\&.value();
198             child_state\->component_instance = component;
199             component\->parent = this;
200             children\&.push_back(component);
201             
202             // Configure event handler
203             component\->configure_event_handler();
204             
205             // Subscribe child events
206             component\->subscribe_events();
207             // Redraw child
208             component\->redraw(layout);
209             
210           }
211           ++id_i;
212         }
213       }
.fi

.SS "template<ComponentEventHandlerConcept EVH, typename \fBT\fP > void \fBcydui::components::component_t\fP< EVH, \fBT\fP >::subscribe_events ()\fC [inline]\fP, \fC [override]\fP, \fC [virtual]\fP"

.PP
Implements \fBcydui::components::component_base_t\fP\&.
.PP
Definition at line \fB151\fP of file \fBcomponent\&.h\fP\&..PP
.nf
151                                        {
152         clear_subscribed_listeners();
153         EVH* evh = event_handler_\&.operator\->();
154         add_event_listeners(evh\->get_event_listeners());
155       }
.fi

.SH "Member Data Documentation"
.PP 
.SS "template<ComponentEventHandlerConcept EVH, typename \fBT\fP > \fBcydui::dimensions::dimension_t\fP \fBcydui::components::component_t\fP< EVH, \fBT\fP >::ch\fC [private]\fP"

.PP
Definition at line \fB127\fP of file \fBcomponent\&.h\fP\&.
.SS "template<ComponentEventHandlerConcept EVH, typename \fBT\fP > \fBcydui::dimensions::dimension_t\fP \fBcydui::components::component_t\fP< EVH, \fBT\fP >::cw\fC [private]\fP"

.PP
Definition at line \fB126\fP of file \fBcomponent\&.h\fP\&.
.SS "template<ComponentEventHandlerConcept EVH, typename \fBT\fP > \fBcydui::dimensions::dimension_t\fP \fBcydui::components::component_t\fP< EVH, \fBT\fP >::cx\fC [private]\fP"

.PP
Private attributes\&. 
.PP
Definition at line \fB124\fP of file \fBcomponent\&.h\fP\&.
.SS "template<ComponentEventHandlerConcept EVH, typename \fBT\fP > \fBcydui::dimensions::dimension_t\fP \fBcydui::components::component_t\fP< EVH, \fBT\fP >::cy\fC [private]\fP"

.PP
Definition at line \fB125\fP of file \fBcomponent\&.h\fP\&.
.SS "template<ComponentEventHandlerConcept EVH, typename \fBT\fP > \fBlazy_alloc\fP<EVH> \fBcydui::components::component_t\fP< EVH, \fBT\fP >::event_handler_ {}\fC [private]\fP"

.PP
Definition at line \fB129\fP of file \fBcomponent\&.h\fP\&..PP
.nf
129 {};
.fi


.SH "Author"
.PP 
Generated automatically by Doxygen for CYD-UI from the source code\&.
