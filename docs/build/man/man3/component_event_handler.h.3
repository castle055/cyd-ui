.TH "include/core/component_event_handler.h" 3 "CYD-UI" \" -*- nroff -*-
.ad l
.nh
.SH NAME
include/core/component_event_handler.h
.SH SYNOPSIS
.br
.PP
\fC#include '\&.\&./cydstd/pragma\&.h'\fP
.br
\fC#include 'component_holder\&.h'\fP
.br
\fC#include '\&.\&./events/cydui_events\&.h'\fP
.br
\fC#include '\&.\&./graphics/graphics\&.hpp'\fP
.br
\fC#include <vector>\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBcydui::components::event_handler_t\fP"
.br
.in -1c
.SS "Namespaces"

.in +1c
.ti -1c
.RI "namespace \fBcydui\fP"
.br
.ti -1c
.RI "namespace \fBcydui::components\fP"
.br
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBCYDUI_INTERNAL_EV_HANDLER_DECL\fP(NAME)"
.br
.ti -1c
.RI "#define \fBCYDUI_INTERNAL_EV_HANDLER_DECL_W_RET\fP(NAME)"
.br
.ti -1c
.RI "#define \fBCYDUI_INTERNAL_EV_HANDLER_IMPL\fP(NAME)"
.br
.ti -1c
.RI "#define \fBCYDUI_INTERNAL_EV_HANDLER_IMPL_W_RET\fP(NAME)"
.br
.ti -1c
.RI "#define \fBCYDUI_INTERNAL_EV_HANDLER_DIMENSION_ACCESSOR\fP(NAME)"
.br
.ti -1c
.RI "#define \fBCYDUI_INTERNAL_EV_HANDLER_DIMENSION_MUTATOR\fP(NAME)"
.br
.ti -1c
.RI "#define \fBCYDUI_INTERNAL_EV_redraw_RETURN\fP   std::vector<\fBcydui::components::component_holder_t\fP>"
.br
.ti -1c
.RI "#define \fBCYDUI_INTERNAL_EV_redraw_ARGS\fP   ()"
.br
.ti -1c
.RI "#define \fBCYDUI_INTERNAL_EV_button_ARGS\fP   (\fBButton\fP button, int x, int y)"
.br
.ti -1c
.RI "#define \fBCYDUI_INTERNAL_EV_mouse_ARGS\fP   (int x, int y)"
.br
.ti -1c
.RI "#define \fBCYDUI_INTERNAL_EV_scroll_ARGS\fP   (int dx, int dy)"
.br
.ti -1c
.RI "#define \fBCYDUI_INTERNAL_EV_button_PROPAGATE\fP(NAME)"
.br
.ti -1c
.RI "#define \fBCYDUI_INTERNAL_EV_mouse_PROPAGATE\fP(NAME)"
.br
.ti -1c
.RI "#define \fBCYDUI_INTERNAL_EV_button_press_ARGS\fP   \fBCYDUI_INTERNAL_EV_button_ARGS\fP"
.br
.ti -1c
.RI "#define \fBCYDUI_INTERNAL_EV_button_release_ARGS\fP   \fBCYDUI_INTERNAL_EV_button_ARGS\fP"
.br
.ti -1c
.RI "#define \fBCYDUI_INTERNAL_EV_mouse_enter_ARGS\fP   \fBCYDUI_INTERNAL_EV_mouse_ARGS\fP"
.br
.ti -1c
.RI "#define \fBCYDUI_INTERNAL_EV_mouse_exit_ARGS\fP   \fBCYDUI_INTERNAL_EV_mouse_ARGS\fP"
.br
.ti -1c
.RI "#define \fBCYDUI_INTERNAL_EV_mouse_motion_ARGS\fP   \fBCYDUI_INTERNAL_EV_mouse_ARGS\fP"
.br
.ti -1c
.RI "#define \fBCYDUI_INTERNAL_EV_key_press_ARGS\fP   (const \fBKeyEvent::DataType\fP& ev)"
.br
.ti -1c
.RI "#define \fBCYDUI_INTERNAL_EV_key_release_ARGS\fP   (const \fBKeyEvent::DataType\fP& ev)"
.br
.ti -1c
.RI "#define \fBON_REDRAW\fP   \fBCYDUI_INTERNAL_EV_HANDLER_IMPL_W_RET\fP(redraw)"
.br
.ti -1c
.RI "#define \fBON_BUTTON_PRESS\fP   \fBCYDUI_INTERNAL_EV_HANDLER_IMPL\fP(button_press)"
.br
.ti -1c
.RI "#define \fBON_BUTTON_RELEASE\fP   \fBCYDUI_INTERNAL_EV_HANDLER_IMPL\fP(button_release)"
.br
.ti -1c
.RI "#define \fBON_MOUSE_ENTER\fP   \fBCYDUI_INTERNAL_EV_HANDLER_IMPL\fP(mouse_enter)"
.br
.ti -1c
.RI "#define \fBON_MOUSE_EXIT\fP   \fBCYDUI_INTERNAL_EV_HANDLER_IMPL\fP(mouse_exit)"
.br
.ti -1c
.RI "#define \fBON_MOUSE_MOTION\fP   \fBCYDUI_INTERNAL_EV_HANDLER_IMPL\fP(mouse_motion)"
.br
.ti -1c
.RI "#define \fBON_SCROLL\fP   \fBCYDUI_INTERNAL_EV_HANDLER_IMPL\fP(scroll)"
.br
.ti -1c
.RI "#define \fBON_KEY_PRESS\fP   \fBCYDUI_INTERNAL_EV_HANDLER_IMPL\fP(key_press)"
.br
.ti -1c
.RI "#define \fBON_KEY_RELEASE\fP   \fBCYDUI_INTERNAL_EV_HANDLER_IMPL\fP(key_release)"
.br
.ti -1c
.RI "#define \fBON_CUSTOM_EVENTS\fP(\&.\&.\&.)"
.br
.ti -1c
.RI "#define \fBON_EVENT\fP(\fBEVENT\fP, \&.\&.\&.)"
.br
.ti -1c
.RI "#define \fBFRAGMENT\fP"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define CYDUI_INTERNAL_EV_button_ARGS   (\fBButton\fP button, int x, int y)"

.PP
Definition at line \fB96\fP of file \fBcomponent_event_handler\&.h\fP\&.
.SS "#define CYDUI_INTERNAL_EV_button_press_ARGS   \fBCYDUI_INTERNAL_EV_button_ARGS\fP"

.PP
Definition at line \fB108\fP of file \fBcomponent_event_handler\&.h\fP\&.
.SS "#define CYDUI_INTERNAL_EV_button_PROPAGATE(NAME)"
\fBValue:\fP.PP
.nf
  if (parent)                                   \\
    parent\->on_button_##NAME(button, x + $x()\&.val(), y + $y()\&.val())
.fi

.PP
Definition at line \fB100\fP of file \fBcomponent_event_handler\&.h\fP\&..PP
.nf
109                                                    {
110         CYDUI_INTERNAL_EV_button_PROPAGATE(press);
111       }
112       // * button release
113 #define CYDUI_INTERNAL_EV_button_release_ARGS     CYDUI_INTERNAL_EV_button_ARGS
114       CYDUI_INTERNAL_EV_HANDLER_DECL(button_release) {
115         CYDUI_INTERNAL_EV_button_PROPAGATE(release);
116       }
117       // * mouse enter
118 #define CYDUI_INTERNAL_EV_mouse_enter_ARGS        CYDUI_INTERNAL_EV_mouse_ARGS
119       CYDUI_INTERNAL_EV_HANDLER_DECL(mouse_enter) {
120         CYDUI_INTERNAL_EV_mouse_PROPAGATE(enter);
121       }
122       // * mouse exit
123 #define CYDUI_INTERNAL_EV_mouse_exit_ARGS         CYDUI_INTERNAL_EV_mouse_ARGS
124       CYDUI_INTERNAL_EV_HANDLER_DECL(mouse_exit) {
125         CYDUI_INTERNAL_EV_mouse_PROPAGATE(exit);
126       }
127       // * mouse motion
128 #define CYDUI_INTERNAL_EV_mouse_motion_ARGS       CYDUI_INTERNAL_EV_mouse_ARGS
129       CYDUI_INTERNAL_EV_HANDLER_DECL(mouse_motion) {
130         CYDUI_INTERNAL_EV_mouse_PROPAGATE(motion);
131       }
132       // * mouse scroll
133       CYDUI_INTERNAL_EV_HANDLER_DECL(scroll) {
134         if (parent)
135           parent\->on_scroll(dx, dy);
136       }
137       
138       // ? KEYBOARD EVENTS
139       // * key press
140 #define CYDUI_INTERNAL_EV_key_press_ARGS          (const KeyEvent::DataType& ev)
141       CYDUI_INTERNAL_EV_HANDLER_DECL(key_press) {
142         if (parent)
143           parent\->on_key_press(ev);
144       }
145       // * key release
146 #define CYDUI_INTERNAL_EV_key_release_ARGS        (const KeyEvent::DataType& ev)
147       CYDUI_INTERNAL_EV_HANDLER_DECL(key_release) {
148         if (parent)
149           parent\->on_key_release(ev);
150       }
151       // * set text input context (a type that accepts text events like insert, backspace and such)
152       TODO("Implement a method to set an input context for text input")
153       
154       struct listener_data_t {
155         std::function<void(cydui::events::Event*)> handler {};
156       };
157       virtual std::unordered_map<std::string, listener_data_t> get_event_listeners() {
158         return {};
159       }
160       
161       virtual void draw_fragment(graphics::vg::vg_fragment_t &fragment) {
162       
163       }
164     };
165 
166 #define ON_REDRAW           CYDUI_INTERNAL_EV_HANDLER_IMPL_W_RET(redraw)
167 #define ON_BUTTON_PRESS     CYDUI_INTERNAL_EV_HANDLER_IMPL(button_press)
168 #define ON_BUTTON_RELEASE   CYDUI_INTERNAL_EV_HANDLER_IMPL(button_release)
169 #define ON_MOUSE_ENTER      CYDUI_INTERNAL_EV_HANDLER_IMPL(mouse_enter)
170 #define ON_MOUSE_EXIT       CYDUI_INTERNAL_EV_HANDLER_IMPL(mouse_exit)
171 #define ON_MOUSE_MOTION     CYDUI_INTERNAL_EV_HANDLER_IMPL(mouse_motion)
172 #define ON_SCROLL           CYDUI_INTERNAL_EV_HANDLER_IMPL(scroll)
173 #define ON_KEY_PRESS        CYDUI_INTERNAL_EV_HANDLER_IMPL(key_press)
174 #define ON_KEY_RELEASE      CYDUI_INTERNAL_EV_HANDLER_IMPL(key_release)
175     TODO("Implement a method to set an input context for text input")
176 
177 #pragma clang diagnostic pop
178 
179 #define ON_CUSTOM_EVENTS(\&.\&.\&.) \\
180 std::unordered_map<std::string, listener_data_t> get_event_listeners() override { \\
181   _Pragma("clang diagnostic push") \\
182   _Pragma("clang diagnostic ignored \\"\-Wunused\-lambda\-capture\\"") \\
183   return __VA_ARGS__ ;                                                            \\
184   _Pragma("clang diagnostic pop") \\
185 }
186 
187 #define ON_EVENT(EVENT, \&.\&.\&.) \\
188 { EVENT ::type, {[this](cydui::events::Event* ev) { \\
189   auto parsed_event = ev\->parse<EVENT>(); \\
190   [this](const cydui::events::ParsedEvent<EVENT>::DataType* ev) \\
191     __VA_ARGS__              \\
192   (parsed_event\&.data);       \\
193 }}}
194 
195 #define FRAGMENT \\
196   void           \\
197   draw_fragment  \\
198   (vg::vg_fragment_t& fragment) \\
199   override
200   
201 }
202 
203 #endif //CYD_UI_COMPONENT_EVENT_HANDLER_H
.fi

.SS "#define CYDUI_INTERNAL_EV_button_release_ARGS   \fBCYDUI_INTERNAL_EV_button_ARGS\fP"

.PP
Definition at line \fB113\fP of file \fBcomponent_event_handler\&.h\fP\&.
.SS "#define CYDUI_INTERNAL_EV_HANDLER_DECL(NAME)"
\fBValue:\fP.PP
.nf
  virtual                                    \\
  void                                       \\
  on_##NAME                                  \\
  CYDUI_INTERNAL_EV_##NAME##_ARGS            \\
.fi

.PP
Definition at line \fB20\fP of file \fBcomponent_event_handler\&.h\fP\&.
.SS "#define CYDUI_INTERNAL_EV_HANDLER_DECL_W_RET(NAME)"
\fBValue:\fP.PP
.nf
  virtual                                          \\
  CYDUI_INTERNAL_EV_##NAME##_RETURN                \\
  on_##NAME                                        \\
  CYDUI_INTERNAL_EV_##NAME##_ARGS                  \\
.fi

.PP
Definition at line \fB26\fP of file \fBcomponent_event_handler\&.h\fP\&.
.SS "#define CYDUI_INTERNAL_EV_HANDLER_DIMENSION_ACCESSOR(NAME)"
\fBValue:\fP.PP
.nf
  inline auto& $##NAME() const                             \\
    { return get_dim()\&.NAME; }
.fi

.PP
Definition at line \fB44\fP of file \fBcomponent_event_handler\&.h\fP\&..PP
.nf
46     { return get_dim()\&.NAME; }
.fi

.SS "#define CYDUI_INTERNAL_EV_HANDLER_DIMENSION_MUTATOR(NAME)"
\fBValue:\fP.PP
.nf
  inline auto& $##NAME(auto value) const {                \\
    auto d = get_dim();                                  \\
    d\&.NAME = value;                                       \\
    d\&.fixed_##NAME = true;                                  \\
    return get_dim()\&.NAME;                                \\
  }
.fi

.PP
Definition at line \fB48\fP of file \fBcomponent_event_handler\&.h\fP\&..PP
.nf
49                                          {                \\
50     auto d = get_dim();                                  \\
51     d\&.NAME = value;                                       \\
52     d\&.fixed_##NAME = true;                                  \\
53     return get_dim()\&.NAME;                                \\
54   }
.fi

.SS "#define CYDUI_INTERNAL_EV_HANDLER_IMPL(NAME)"
\fBValue:\fP.PP
.nf
  void                                       \\
  on_##NAME                                  \\
  CYDUI_INTERNAL_EV_##NAME##_ARGS            \\
  override
.fi

.PP
Definition at line \fB32\fP of file \fBcomponent_event_handler\&.h\fP\&.
.SS "#define CYDUI_INTERNAL_EV_HANDLER_IMPL_W_RET(NAME)"
\fBValue:\fP.PP
.nf
  CYDUI_INTERNAL_EV_##NAME##_RETURN                \\
  on_##NAME                                        \\
  CYDUI_INTERNAL_EV_##NAME##_ARGS                  \\
  override
.fi

.PP
Definition at line \fB38\fP of file \fBcomponent_event_handler\&.h\fP\&.
.SS "#define CYDUI_INTERNAL_EV_key_press_ARGS   (const \fBKeyEvent::DataType\fP& ev)"

.PP
Definition at line \fB140\fP of file \fBcomponent_event_handler\&.h\fP\&.
.SS "#define CYDUI_INTERNAL_EV_key_release_ARGS   (const \fBKeyEvent::DataType\fP& ev)"

.PP
Definition at line \fB146\fP of file \fBcomponent_event_handler\&.h\fP\&.
.SS "#define CYDUI_INTERNAL_EV_mouse_ARGS   (int x, int y)"

.PP
Definition at line \fB97\fP of file \fBcomponent_event_handler\&.h\fP\&.
.SS "#define CYDUI_INTERNAL_EV_mouse_enter_ARGS   \fBCYDUI_INTERNAL_EV_mouse_ARGS\fP"

.PP
Definition at line \fB118\fP of file \fBcomponent_event_handler\&.h\fP\&.
.SS "#define CYDUI_INTERNAL_EV_mouse_exit_ARGS   \fBCYDUI_INTERNAL_EV_mouse_ARGS\fP"

.PP
Definition at line \fB123\fP of file \fBcomponent_event_handler\&.h\fP\&.
.SS "#define CYDUI_INTERNAL_EV_mouse_motion_ARGS   \fBCYDUI_INTERNAL_EV_mouse_ARGS\fP"

.PP
Definition at line \fB128\fP of file \fBcomponent_event_handler\&.h\fP\&.
.SS "#define CYDUI_INTERNAL_EV_mouse_PROPAGATE(NAME)"
\fBValue:\fP.PP
.nf
  if (parent)                                   \\
    parent\->on_mouse_##NAME(x + $x()\&.val(), y + $y()\&.val())
.fi

.PP
Definition at line \fB103\fP of file \fBcomponent_event_handler\&.h\fP\&.
.SS "#define CYDUI_INTERNAL_EV_redraw_ARGS   ()"

.PP
Definition at line \fB92\fP of file \fBcomponent_event_handler\&.h\fP\&.
.SS "#define CYDUI_INTERNAL_EV_redraw_RETURN   std::vector<\fBcydui::components::component_holder_t\fP>"

.PP
Definition at line \fB91\fP of file \fBcomponent_event_handler\&.h\fP\&.
.SS "#define CYDUI_INTERNAL_EV_scroll_ARGS   (int dx, int dy)"

.PP
Definition at line \fB98\fP of file \fBcomponent_event_handler\&.h\fP\&.
.SS "#define FRAGMENT"
\fBValue:\fP.PP
.nf
  void           \\
  draw_fragment  \\
  (vg::vg_fragment_t& fragment) \\
  override
.fi

.SS "#define ON_BUTTON_PRESS   \fBCYDUI_INTERNAL_EV_HANDLER_IMPL\fP(button_press)"

.PP
Definition at line \fB167\fP of file \fBcomponent_event_handler\&.h\fP\&.
.SS "#define ON_BUTTON_RELEASE   \fBCYDUI_INTERNAL_EV_HANDLER_IMPL\fP(button_release)"

.PP
Definition at line \fB168\fP of file \fBcomponent_event_handler\&.h\fP\&.
.SS "#define ON_CUSTOM_EVENTS( \&.\&.\&.)"
\fBValue:\fP.PP
.nf
std::unordered_map<std::string, listener_data_t> get_event_listeners() override { \\
  _Pragma("clang diagnostic push") \\
  _Pragma("clang diagnostic ignored \\"\-Wunused\-lambda\-capture\\"") \\
  return __VA_ARGS__ ;                                                            \\
  _Pragma("clang diagnostic pop") \\
}
.fi

.SS "#define ON_EVENT(\fBEVENT\fP,  \&.\&.\&.)"
\fBValue:\fP.PP
.nf
{ EVENT ::type, {[this](cydui::events::Event* ev) { \\
  auto parsed_event = ev\->parse<EVENT>(); \\
  [this](const cydui::events::ParsedEvent<EVENT>::DataType* ev) \\
    __VA_ARGS__              \\
  (parsed_event\&.data);       \\
}}}
.fi

.SS "#define ON_KEY_PRESS   \fBCYDUI_INTERNAL_EV_HANDLER_IMPL\fP(key_press)"

.PP
Definition at line \fB173\fP of file \fBcomponent_event_handler\&.h\fP\&.
.SS "#define ON_KEY_RELEASE   \fBCYDUI_INTERNAL_EV_HANDLER_IMPL\fP(key_release)"

.PP
Definition at line \fB174\fP of file \fBcomponent_event_handler\&.h\fP\&.
.SS "#define ON_MOUSE_ENTER   \fBCYDUI_INTERNAL_EV_HANDLER_IMPL\fP(mouse_enter)"

.PP
Definition at line \fB169\fP of file \fBcomponent_event_handler\&.h\fP\&.
.SS "#define ON_MOUSE_EXIT   \fBCYDUI_INTERNAL_EV_HANDLER_IMPL\fP(mouse_exit)"

.PP
Definition at line \fB170\fP of file \fBcomponent_event_handler\&.h\fP\&.
.SS "#define ON_MOUSE_MOTION   \fBCYDUI_INTERNAL_EV_HANDLER_IMPL\fP(mouse_motion)"

.PP
Definition at line \fB171\fP of file \fBcomponent_event_handler\&.h\fP\&.
.SS "#define ON_REDRAW   \fBCYDUI_INTERNAL_EV_HANDLER_IMPL_W_RET\fP(redraw)"

.PP
Definition at line \fB166\fP of file \fBcomponent_event_handler\&.h\fP\&.
.SS "#define ON_SCROLL   \fBCYDUI_INTERNAL_EV_HANDLER_IMPL\fP(scroll)"

.PP
Definition at line \fB172\fP of file \fBcomponent_event_handler\&.h\fP\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for CYD-UI from the source code\&.
